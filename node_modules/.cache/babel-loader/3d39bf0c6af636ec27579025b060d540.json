{"ast":null,"code":"export const initialState = {\n  basket: []\n};\nexport const getBasketTotal = basket => basket === null || basket === void 0 ? void 0 : basket.reduce((amount, item) => item.price + amount, 0);\n\nfunction reducer(state, action) {\n  console.log(action);\n\n  switch (action.type) {\n    case \"ADD_TO_BASKET\":\n      return { ...state,\n        basket: [...state.basket, action.item]\n      };\n\n    case \"ADD_QUANTITY\":\n      return { ...state,\n        basket: state.basket.map(item => item.id === action.id ? { ...item,\n          quantity: item.quantity + 1\n        } : item)\n      };\n\n    case \"SUB_QUANTITY\":\n      return { ...state,\n        basket: state.basket.map(item => item.id === action.id ? { ...item,\n          quantity: item.quantity !== 1 ? item.quantity - 1 : 1\n        } : item)\n      };\n\n    case \"REMOVE_FROM_BASKET\":\n      let newBasket = [...state.basket];\n      const index = state.basket.findIndex(basketItem => basketItem.id === action.id);\n\n      if (index >= 0) {\n        newBasket.splice(index, 1);\n      } else {\n        console.warn(`Cant remove product (id: ${action.id}) as its not in the basket!!`);\n      }\n\n      return { ...state,\n        basket: newBasket\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/HP/OneDrive/Desktop/battlegames/src/Redux/reducer.js"],"names":["initialState","basket","getBasketTotal","reduce","amount","item","price","reducer","state","action","console","log","type","map","id","quantity","newBasket","index","findIndex","basketItem","splice","warn"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG;AAC1BC,EAAAA,MAAM,EAAE;AADkB,CAArB;AAIP,OAAO,MAAMC,cAAc,GAAID,MAAD,IAC5BA,MAD4B,aAC5BA,MAD4B,uBAC5BA,MAAM,CAAEE,MAAR,CAAe,CAACC,MAAD,EAASC,IAAT,KAAkBA,IAAI,CAACC,KAAL,GAAaF,MAA9C,EAAsD,CAAtD,CADK;;AAGP,SAASG,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC9BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,UAAQA,MAAM,CAACG,IAAf;AACE,SAAK,eAAL;AACE,aAAO,EACL,GAAGJ,KADE;AAELP,QAAAA,MAAM,EAAE,CAAC,GAAGO,KAAK,CAACP,MAAV,EAAkBQ,MAAM,CAACJ,IAAzB;AAFH,OAAP;;AAIF,SAAK,cAAL;AACE,aAAO,EACL,GAAGG,KADE;AAELP,QAAAA,MAAM,EAAEO,KAAK,CAACP,MAAN,CAAaY,GAAb,CAAkBR,IAAD,IACvBA,IAAI,CAACS,EAAL,KAAYL,MAAM,CAACK,EAAnB,GACI,EAAE,GAAGT,IAAL;AAAWU,UAAAA,QAAQ,EAAEV,IAAI,CAACU,QAAL,GAAgB;AAArC,SADJ,GAEIV,IAHE;AAFH,OAAP;;AAQF,SAAK,cAAL;AACE,aAAO,EACL,GAAGG,KADE;AAELP,QAAAA,MAAM,EAAEO,KAAK,CAACP,MAAN,CAAaY,GAAb,CAAkBR,IAAD,IACvBA,IAAI,CAACS,EAAL,KAAYL,MAAM,CAACK,EAAnB,GACI,EACE,GAAGT,IADL;AAEEU,UAAAA,QAAQ,EAAEV,IAAI,CAACU,QAAL,KAAkB,CAAlB,GAAsBV,IAAI,CAACU,QAAL,GAAgB,CAAtC,GAA0C;AAFtD,SADJ,GAKIV,IANE;AAFH,OAAP;;AAYF,SAAK,oBAAL;AACE,UAAIW,SAAS,GAAG,CAAC,GAAGR,KAAK,CAACP,MAAV,CAAhB;AACA,YAAMgB,KAAK,GAAGT,KAAK,CAACP,MAAN,CAAaiB,SAAb,CACXC,UAAD,IAAgBA,UAAU,CAACL,EAAX,KAAkBL,MAAM,CAACK,EAD7B,CAAd;;AAGA,UAAIG,KAAK,IAAI,CAAb,EAAgB;AACdD,QAAAA,SAAS,CAACI,MAAV,CAAiBH,KAAjB,EAAwB,CAAxB;AACD,OAFD,MAEO;AACLP,QAAAA,OAAO,CAACW,IAAR,CACG,4BAA2BZ,MAAM,CAACK,EAAG,8BADxC;AAGD;;AACD,aAAO,EAAE,GAAGN,KAAL;AAAYP,QAAAA,MAAM,EAAEe;AAApB,OAAP;;AAEF;AACE,aAAOR,KAAP;AA3CJ;AA6CD;;AAED,eAAeD,OAAf","sourcesContent":["export const initialState = {\r\n  basket: [],\r\n};\r\n\r\nexport const getBasketTotal = (basket) =>\r\n  basket?.reduce((amount, item) => item.price + amount, 0);\r\n\r\nfunction reducer(state, action) {\r\n  console.log(action);\r\n  switch (action.type) {\r\n    case \"ADD_TO_BASKET\":\r\n      return {\r\n        ...state,\r\n        basket: [...state.basket, action.item],\r\n      };\r\n    case \"ADD_QUANTITY\":\r\n      return {\r\n        ...state,\r\n        basket: state.basket.map((item) =>\r\n          item.id === action.id\r\n            ? { ...item, quantity: item.quantity + 1 }\r\n            : item\r\n        ),\r\n      };\r\n    case \"SUB_QUANTITY\":\r\n      return {\r\n        ...state,\r\n        basket: state.basket.map((item) =>\r\n          item.id === action.id\r\n            ? {\r\n                ...item,\r\n                quantity: item.quantity !== 1 ? item.quantity - 1 : 1,\r\n              }\r\n            : item\r\n        ),\r\n      };\r\n\r\n    case \"REMOVE_FROM_BASKET\":\r\n      let newBasket = [...state.basket];\r\n      const index = state.basket.findIndex(\r\n        (basketItem) => basketItem.id === action.id\r\n      );\r\n      if (index >= 0) {\r\n        newBasket.splice(index, 1);\r\n      } else {\r\n        console.warn(\r\n          `Cant remove product (id: ${action.id}) as its not in the basket!!`\r\n        );\r\n      }\r\n      return { ...state, basket: newBasket };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}