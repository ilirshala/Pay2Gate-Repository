{"ast":null,"code":"export const initialState = {\n  basket: []\n};\nexport const getBasketTotal = basket => basket === null || basket === void 0 ? void 0 : basket.reduce((amount, item) => item.price + amount, 0);\n\nfunction reducer(state, action) {\n  console.log(action);\n\n  switch (action.type) {\n    case \"ADD_TO_BASKET\":\n      //Logic for adding item to basket\n      return { ...state,\n        basket: [...state.basket, action.item]\n      };\n\n    case \"REMOVE_FROM_BASKET\":\n      //Logic for removing item from basket\n      let newBasket = [...state.basket];\n      const index = state.basket.findIndex(basketItem => basketItem.id === action.id);\n\n      if (index >= 0) {\n        newBasket.splice(index, 1);\n      } else {\n        console.warn(`Cant remove product (id: ${action.id}) as its not in the basket!!`);\n      }\n\n      return { ...state,\n        basket: newBasket\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/HP/OneDrive/Desktop/battlegames/src/Redux/reducer.js"],"names":["initialState","basket","getBasketTotal","reduce","amount","item","price","reducer","state","action","console","log","type","newBasket","index","findIndex","basketItem","id","splice","warn"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG;AAC1BC,EAAAA,MAAM,EAAE;AADkB,CAArB;AAIP,OAAO,MAAMC,cAAc,GAAID,MAAD,IAC5BA,MAD4B,aAC5BA,MAD4B,uBAC5BA,MAAM,CAAEE,MAAR,CAAe,CAACC,MAAD,EAASC,IAAT,KAAkBA,IAAI,CAACC,KAAL,GAAaF,MAA9C,EAAsD,CAAtD,CADK;;AAGP,SAASG,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC9BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,UAAQA,MAAM,CAACG,IAAf;AACE,SAAK,eAAL;AACE;AACA,aAAO,EACL,GAAGJ,KADE;AAELP,QAAAA,MAAM,EAAE,CAAC,GAAGO,KAAK,CAACP,MAAV,EAAkBQ,MAAM,CAACJ,IAAzB;AAFH,OAAP;;AAIF,SAAK,oBAAL;AACE;AACA,UAAIQ,SAAS,GAAG,CAAC,GAAGL,KAAK,CAACP,MAAV,CAAhB;AAEA,YAAMa,KAAK,GAAGN,KAAK,CAACP,MAAN,CAAac,SAAb,CACXC,UAAD,IAAgBA,UAAU,CAACC,EAAX,KAAkBR,MAAM,CAACQ,EAD7B,CAAd;;AAIA,UAAIH,KAAK,IAAI,CAAb,EAAgB;AACdD,QAAAA,SAAS,CAACK,MAAV,CAAiBJ,KAAjB,EAAwB,CAAxB;AACD,OAFD,MAEO;AACLJ,QAAAA,OAAO,CAACS,IAAR,CACG,4BAA2BV,MAAM,CAACQ,EAAG,8BADxC;AAGD;;AACD,aAAO,EAAE,GAAGT,KAAL;AAAYP,QAAAA,MAAM,EAAEY;AAApB,OAAP;;AAEF;AACE,aAAOL,KAAP;AAzBJ;AA2BD;;AAED,eAAeD,OAAf","sourcesContent":["export const initialState = {\r\n  basket: [],\r\n};\r\n\r\nexport const getBasketTotal = (basket) =>\r\n  basket?.reduce((amount, item) => item.price + amount, 0);\r\n\r\nfunction reducer(state, action) {\r\n  console.log(action);\r\n  switch (action.type) {\r\n    case \"ADD_TO_BASKET\":\r\n      //Logic for adding item to basket\r\n      return {\r\n        ...state,\r\n        basket: [...state.basket, action.item],\r\n      };\r\n    case \"REMOVE_FROM_BASKET\":\r\n      //Logic for removing item from basket\r\n      let newBasket = [...state.basket];\r\n\r\n      const index = state.basket.findIndex(\r\n        (basketItem) => basketItem.id === action.id\r\n      );\r\n\r\n      if (index >= 0) {\r\n        newBasket.splice(index, 1);\r\n      } else {\r\n        console.warn(\r\n          `Cant remove product (id: ${action.id}) as its not in the basket!!`\r\n        );\r\n      }\r\n      return { ...state, basket: newBasket };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}