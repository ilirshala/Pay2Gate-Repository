{"ast":null,"code":"import _slicedToArray from\"C:/Users/HP/OneDrive/Desktop/battlegames/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import\"../../Styles/Shared/CartMenu.scss\";import CloseIcon from\"@material-ui/icons/Close\";import MyButton from\"./MyButton\";import CurrencyFormat from\"react-currency-format\";import{useStateValue}from\"../../Redux/StateProvider\";import{getBasketTotal}from\"../../Redux/reducer\";import CheckoutProduct from\"./CheckoutProduct\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function CartMenu(_ref){var closeFunction=_ref.closeFunction;var _useStateValue=useStateValue(),_useStateValue2=_slicedToArray(_useStateValue,1),basket=_useStateValue2[0].basket;return/*#__PURE__*/_jsxs(\"div\",{className:\"cartMenu\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"cartMenu__header\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Your Shopping Cart\"}),/*#__PURE__*/_jsx(CloseIcon,{onClick:closeFunction})]}),/*#__PURE__*/_jsx(\"div\",{className:\"cartContainer\",children:(basket===null||basket===void 0?void 0:basket.length)===0?/*#__PURE__*/_jsx(\"h2\",{id:\"shoppingBasketEmpty\",children:\"Shopping basket is empty\"}):/*#__PURE__*/_jsx(_Fragment,{children:basket===null||basket===void 0?void 0:basket.map(function(item){return/*#__PURE__*/_jsx(CheckoutProduct,{id:item.id,title:item.title,image:item.image,price:item.price,quantity:item.quantity});})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"cartMenu__price\",children:[/*#__PURE__*/_jsx(CurrencyFormat,{renderText:function renderText(value){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"subtotal\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Subtotal:\"}),/*#__PURE__*/_jsx(\"h5\",{children:value})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"subtotal\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Items in cart:\"}),/*#__PURE__*/_jsx(\"h5\",{children:basket.length})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"total\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Total\"}),/*#__PURE__*/_jsx(\"h5\",{children:value})]})]});},decimalScale:2,value:getBasketTotal(basket),displayType:\"text\",thousandSeperator:true,prefix:\"$\"}),/*#__PURE__*/_jsx(MyButton,{name:\"view cart\"})]})]});}export default CartMenu;","map":{"version":3,"sources":["C:/Users/HP/OneDrive/Desktop/battlegames/src/Components/Shared/CartMenu.jsx"],"names":["React","useState","CloseIcon","MyButton","CurrencyFormat","useStateValue","getBasketTotal","CheckoutProduct","CartMenu","closeFunction","basket","length","map","item","id","title","image","price","quantity","value"],"mappings":"+JAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAO,mCAAP,CACA,MAAOC,CAAAA,SAAP,KAAsB,0BAAtB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,cAAP,KAA2B,uBAA3B,CACA,OAASC,aAAT,KAA8B,2BAA9B,CACA,OAASC,cAAT,KAA+B,qBAA/B,CACA,MAAOC,CAAAA,eAAP,KAA4B,mBAA5B,C,6IAEA,QAASC,CAAAA,QAAT,MAAqC,IAAjBC,CAAAA,aAAiB,MAAjBA,aAAiB,CACnC,mBAAqBJ,aAAa,EAAlC,kDAASK,MAAT,oBAASA,MAAT,CACA,mBACE,aAAK,SAAS,CAAC,UAAf,wBACE,aAAK,SAAS,CAAC,kBAAf,wBACE,0CADF,cAEE,KAAC,SAAD,EAAW,OAAO,CAAED,aAApB,EAFF,GADF,cAKE,YAAK,SAAS,CAAC,eAAf,UACG,CAAAC,MAAM,OAAN,EAAAA,MAAM,SAAN,QAAAA,MAAM,CAAEC,MAAR,IAAmB,CAAnB,cACC,WAAI,EAAE,CAAC,qBAAP,sCADD,cAGC,yBACGD,MADH,SACGA,MADH,iBACGA,MAAM,CAAEE,GAAR,CAAY,SAACC,IAAD,CAAU,CACrB,mBACE,KAAC,eAAD,EACE,EAAE,CAAEA,IAAI,CAACC,EADX,CAEE,KAAK,CAAED,IAAI,CAACE,KAFd,CAGE,KAAK,CAAEF,IAAI,CAACG,KAHd,CAIE,KAAK,CAAEH,IAAI,CAACI,KAJd,CAKE,QAAQ,CAAEJ,IAAI,CAACK,QALjB,EADF,CASD,CAVA,CADH,EAJJ,EALF,cAwBE,aAAK,SAAS,CAAC,iBAAf,wBACE,KAAC,cAAD,EACE,UAAU,CAAE,oBAACC,KAAD,qBACV,wCACE,aAAK,SAAS,CAAC,UAAf,wBACE,gCADF,cAEE,oBAAKA,KAAL,EAFF,GADF,cAME,aAAK,SAAS,CAAC,UAAf,wBACE,qCADF,cAEE,oBAAKT,MAAM,CAACC,MAAZ,EAFF,GANF,cAUE,aAAK,SAAS,CAAC,OAAf,wBACE,4BADF,cAEE,oBAAKQ,KAAL,EAFF,GAVF,GADU,EADd,CAkBE,YAAY,CAAE,CAlBhB,CAmBE,KAAK,CAAEb,cAAc,CAACI,MAAD,CAnBvB,CAoBE,WAAW,CAAE,MApBf,CAqBE,iBAAiB,CAAE,IArBrB,CAsBE,MAAM,CAAE,GAtBV,EADF,cA0BE,KAAC,QAAD,EAAU,IAAI,CAAC,WAAf,EA1BF,GAxBF,GADF,CAuDD,CAED,cAAeF,CAAAA,QAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../../Styles/Shared/CartMenu.scss\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport MyButton from \"./MyButton\";\r\nimport CurrencyFormat from \"react-currency-format\";\r\nimport { useStateValue } from \"../../Redux/StateProvider\";\r\nimport { getBasketTotal } from \"../../Redux/reducer\";\r\nimport CheckoutProduct from \"./CheckoutProduct\";\r\n\r\nfunction CartMenu({ closeFunction }) {\r\n  const [{ basket }] = useStateValue();\r\n  return (\r\n    <div className='cartMenu'>\r\n      <div className='cartMenu__header'>\r\n        <h4>Your Shopping Cart</h4>\r\n        <CloseIcon onClick={closeFunction} />\r\n      </div>\r\n      <div className='cartContainer'>\r\n        {basket?.length === 0 ? (\r\n          <h2 id='shoppingBasketEmpty'>Shopping basket is empty</h2>\r\n        ) : (\r\n          <>\r\n            {basket?.map((item) => {\r\n              return (\r\n                <CheckoutProduct\r\n                  id={item.id}\r\n                  title={item.title}\r\n                  image={item.image}\r\n                  price={item.price}\r\n                  quantity={item.quantity}\r\n                />\r\n              );\r\n            })}\r\n          </>\r\n        )}\r\n      </div>\r\n      <div className='cartMenu__price'>\r\n        <CurrencyFormat\r\n          renderText={(value) => (\r\n            <>\r\n              <div className='subtotal'>\r\n                <p>Subtotal:</p>\r\n                <h5>{value}</h5>\r\n              </div>\r\n\r\n              <div className='subtotal'>\r\n                <p>Items in cart:</p>\r\n                <h5>{basket.length}</h5>\r\n              </div>\r\n              <div className='total'>\r\n                <p>Total</p>\r\n                <h5>{value}</h5>\r\n              </div>\r\n            </>\r\n          )}\r\n          decimalScale={2}\r\n          value={getBasketTotal(basket)}\r\n          displayType={\"text\"}\r\n          thousandSeperator={true}\r\n          prefix={\"$\"}\r\n        />\r\n\r\n        <MyButton name='view cart' />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CartMenu;\r\n"]},"metadata":{},"sourceType":"module"}